//#pragma GCC optimize("Ofast")
//#pragma GCC target("avx,avx2,fma")

#include <bits/stdc++.h>

#define besmellah ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
using namespace std;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
const ll INF = 1e9 + 7;
const int OO = 0x3f3f3f3f;
const ll LOO = 0x3f3f3f3f3f3f3f3f;
const ll MOD = 1e9 + 7;
const ll N = 1e2;
const double EPS = 1e-6;
#define M_PI 3.14159265358979323846
#define all(a)  a.begin(),a.end()
#define endl '\n'
const int dx[] = {+0, +0, +1, -1, +1, -1, +1, -1};
const int dy[] = {+1, -1, +0, +0, +1, -1, -1, +1};
int knightDx[] = {+1, -1, +2, +2, -2, -2, +1, -1};
int knightDy[] = {+2, +2, +1, -1, +1, -1, -2, -2};
//#define int long long


int n;

ll solve(string &s, int cnt) {
    if (n - cnt == s.size()) {
        return 0;
    }

    int c=0;
    while(cnt){
        if (s[cnt - 1] == '1')
            s[cnt - 1] = '0', cnt++;
        else {
            s[cnt - 1] = '1', cnt--;
        }
        c++;
    }

    return  c;
}


signed main() {
    besmellah
//Sky is the limit ❤
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#else
    //freopen("", "r", stdin);
#endif
    int T = 1;
    //cin >> T;
//remember data type long long or int
    while (T--) {
        cin >> n;
        ll sum = 0;
        for (int i = 0; i < (1 << n); ++i) {
            string s = "";
            int c = 0;
            for (int j = 0; j < n; ++j) {
                if ((1 << j) & i) {
                    s += '1';
                    c++;
                } else s += '0';
            }
            sum += solve(s, n - c);
        }
        cout << sum / (ll) (__gcd(sum, ll(1 << n))) << '/';
        cout << (1 << n) / __gcd(sum, ll(1 << n)) << endl;
    }
//remember data type long long or int

}
