//#pragma GCC optimize("Ofast")
//#pragma GCC target("avx,avx2,fma")

#include <bits/stdc++.h>

#define besmellah ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
using namespace std;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
const ll INF = 1e9 + 7;
const int OO = 0x3f3f3f3f;
const ll LOO = 0x3f3f3f3f3f3f3f3f;
const ll MOD = 1e9 + 7;
const ll N = 1e3+5;
#define all(a)  a.begin(),a.end()
#define M_PI 3.14159265358979323846
#define endl '\n'
const int dx[] = {+0, +0, +1, -1, +1, -1, +1, -1};
const int dy[] = {+1, -1, +0, +0, +1, -1, -1, +1};
int knightDx[] = {+1, -1, +2, +2, -2, -2, +1, -1};
int knightDy[] = {+2, +2, +1, -1, +1, -1, -2, -2};
//#define int long long

vector<vector<ll>>dp(N,vector<ll>(N,-1));
int n;
vector<vector<char>>arr(N,vector<char>(N));

ll solve(int i,int j){
    if(i>=n or j>=n)return 0;
    if(i==n-1 and j==n-1)return 1;

    ll &ret=dp[i][j];

    if(~ret)return ret;

    ll op1=(i<n-1 and arr[i+1][j]!='*')?solve(i+1,j):0;
    ll op2=(j<n-1 and arr[i][j+1]!='*')?solve(i,j+1):0;
    return ret=(op1+op2)%MOD;
}

signed main() {
    besmellah
// لا تحسبن المجد تمرا انت اكله لن تبلغ المجد حتي تلعق الصبر ❤
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#else
    //freopen("", "r", stdin);
#endif
    int T = 1;
    //cin >> T;
//remember data type long long or int
    while (T--) {
        cin >> n;
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                cin>>arr[i][j];
            }
        }
        if(arr[0][0]!='*')
        cout<<solve(0,0)<<endl;
        else cout<<0<<endl;
    }
//remember data type long long or int

}
