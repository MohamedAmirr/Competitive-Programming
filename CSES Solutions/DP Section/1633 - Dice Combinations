//#pragma GCC optimize("Ofast")
//#pragma GCC target("avx,avx2,fma")

#include <bits/stdc++.h>

#define besmellah ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
using namespace std;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
const ll INF = 1e9 + 7;
const int OO = 0x3f3f3f3f;
const ll LOO = 0x3f3f3f3f3f3f3f3f;
const ll MOD = 1e9 + 7;
const ll N = 1e6 + 5;
#define all(a)  a.begin(),a.end()
#define M_PI 3.14159265358979323846
#define endl '\n'
const int dx[] = {+0, +0, +1, -1, +1, -1, +1, -1};
const int dy[] = {+1, -1, +0, +0, +1, -1, -1, +1};
int knightDx[] = {+1, -1, +2, +2, -2, -2, +1, -1};
int knightDy[] = {+2, +2, +1, -1, +1, -1, -2, -2};
//#define int long long

int n;
vector<int> arr(6);
vector<vector<int>> dp(N + 5, vector<int>(6, -1));


int dpdp(int i, int sum) {
    if (i >= 6 or i < 0 or sum > n)return 0;
    if (sum == n)return 1;
    if (dp[sum][i] != -1)return dp[sum][i];

    int op1 = dpdp(0, sum + arr[i]) % MOD;
    int op2 = dpdp(i + 1, sum) % MOD;
    return dp[sum][i] = (op1 + op2) % MOD;
}

signed main() {
    besmellah
// لا تحسبن المجد تمرا انت اكله لن تبلغ المجد حتي تلعق الصبر ❤
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#else
    //freopen("", "r", stdin);
#endif
    int T = 1;
//    cin >> T;
//remember data type long long or int
    while (T--) {
        cin >> n;
        iota(all(arr), 1);
        cout << dpdp(0, 0);

    }
//remember data type long long or int

}
